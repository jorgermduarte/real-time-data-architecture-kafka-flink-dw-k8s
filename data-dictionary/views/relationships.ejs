<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Table Relationships</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cytoscape/3.23.0/cytoscape.min.js"></script>
    <script src="https://unpkg.com/webcola/WebCola/cola.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cytoscape-cola@2.4.0/cytoscape-cola.min.js"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
        }
        #cy {
            width: 100%;
            height: 700px;
            background-color: #f4f4f4;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .table-details {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            padding: 15px;
            margin-top: 20px;
        }
        .node-details {
            background-color: #f1f3f5;
            border-radius: 4px;
            padding: 10px;
            margin-top: 15px;
            display: none;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-success">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Data Dictionary</a>
        </div>
    </nav>

    <div class="container mt-5">
        <h1 class="text-center mb-4">Table Relationships Network</h1>
        
        <div id="cy"></div>

        <div class="node-details text-center" id="nodeDetails">
            <h4 id="selectedTableName"></h4>
            <p id="selectedTableDescription"></p>
            <div id="tableColumns"></div>
        </div>

        <div class="table-details mt-4">
            <h3>Legend</h3>
            <p>
                <span class="badge bg-primary me-2">Blue Nodes</span> Tables with connections
                <span class="badge bg-secondary ms-3 me-2">Gray Nodes</span> Tables without external connections
            </p>
            
        </div>
        
    <a href="/" class="btn btn-secondary mt-3">Go Back</a>
    </div>

    <br/>
    <br/>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Parse metadata passed from the server
            const metadata = <%- JSON.stringify(metadata) %>;

            // Prepare nodes and edges for Cytoscape
            const nodes = [];
            const edges = [];

            // Create nodes for all tables
            Object.keys(metadata).forEach(tableName => {
                const tableData = metadata[tableName];
                const hasRelations = tableData.relations && tableData.relations.length > 0;
                
                nodes.push({
                    data: { 
                        id: tableName, 
                        label: tableName,
                        description: tableData.description || 'No description available',
                        columns: tableData.columns || {},
                        hasRelations: hasRelations,
                        backgroundColor: hasRelations ? '#007bff' : '#6c757d'
                    }
                });
            });

            // Create edges based on relations
            Object.keys(metadata).forEach(tableName => {
                const table = metadata[tableName];
                if (table.relations) {
                    table.relations.forEach(relatedTable => {
                        edges.push({
                            data: { 
                                source: tableName, 
                                target: relatedTable 
                            }
                        });
                    });
                }
            });

        // Plugin check
        if (typeof cytoscapeCola !== 'undefined') {
            cytoscape.use(cytoscapeCola);
        } else {
            console.error('cytoscapeCola plugin not loaded.');
        }

            // Initialize Cytoscape
            const cy = cytoscape({
                container: document.getElementById('cy'),
                elements: {
                    nodes: nodes,
                    edges: edges
                },
                style: [
                    {
                        selector: 'node',
                        style: {
                            'label': 'data(label)',
                            'background-color': 'data(backgroundColor)',
                            'color': '#ffffff',
                            'text-valign': 'center',
                            'text-halign': 'center',
                            'font-size': '10px',
                            'width': '60px',
                            'height': '60px'
                        }
                    },
                    {
                        selector: 'edge',
                        style: {
                            'width': 2,
                            'line-color': '#28a745',
                            'target-arrow-color': '#28a745',
                            'target-arrow-shape': 'triangle',
                            'curve-style': 'bezier'
                        }
                    }
                ],
                layout: {
                    name: 'cola',
                    animate: true,
                    refresh: 2,
                    fit: true,
                    padding: 30,
                    randomize: true
                }
            });

            // Add click event to show table details
            cy.on('tap', 'node', function(evt){
                const tableName = evt.target.id();
                const tableData = metadata[tableName];
                
                // Update node details
                const nodeDetailsEl = document.getElementById('nodeDetails');
                const tableNameEl = document.getElementById('selectedTableName');
                const tableDescEl = document.getElementById('selectedTableDescription');
                const tableColumnsEl = document.getElementById('tableColumns');
                
                tableNameEl.textContent = tableName;
                tableDescEl.textContent = tableData.description || 'No description available';
                
                // Display columns
                tableColumnsEl.innerHTML = '<h5>Columns:</h5>';
                const columnsList = document.createElement('ul');
                columnsList.className = 'list-group';
                
                Object.entries(tableData.columns || {}).forEach(([columnName, description]) => {
                    const columnItem = document.createElement('li');
                    columnItem.className = 'list-group-item';
                    columnItem.innerHTML = `<strong>${columnName}</strong>: ${description}`;
                    columnsList.appendChild(columnItem);
                });

                tableColumnsEl.appendChild(columnsList);
                nodeDetailsEl.style.display = 'block';
            });

            // Hover effect
            cy.on('mouseover', 'node', function(evt){
                evt.target.animate({
                    style: { 'background-color': '#17a2b8' },
                    duration: 200
                });
            });

            cy.on('mouseout', 'node', function(evt){
                evt.target.animate({
                    duration: 200
                });
            });
        });
    </script>
</body>
</html>