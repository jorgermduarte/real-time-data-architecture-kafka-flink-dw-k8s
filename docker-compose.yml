version: '3'
services:
  node-backend-api:
    container_name: node-backend-api
    build: ./node-backend-api
    ports:
      - "3000:3000"
    depends_on:
      - redis-service
      - kafka
      - prometheus
      - oracle-db
    env_file:
      - ./node-backend-api/.env.production

  redis-service:
    container_name: redis-service
    image: "redis:alpine"
    environment:
      - REDIS_PASSWORD=your_password
    command:
      - redis-server
      - "--requirepass"
      - "your_password"
      - "--maxmemory"
      - "100mb"
      - "--maxmemory-policy"
      - "allkeys-lru"
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis-data:/data

  zookeeper:
      container_name: zookeeper
      image: confluentinc/cp-zookeeper:latest
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  cmak:
    container_name: cmak
    image: hlebalbau/kafka-manager:latest
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
    volumes:
      - ./data/cmak:/cmak-data

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"  # Prometheus UI

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - "4000:3000"
      - "4001:4001"
    user: "0"
    volumes:
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus

  oracle-db:
    container_name: oracle-db
    image: gvenzl/oracle-xe
    ports:
      - "1521:1521"
      - "8080:8080"
    environment:
      - APP_USER=jorgermduarte
      - APP_USER_PASSWORD=123456
      - ORACLE_DATABASE=jorgermduarte
      - ORACLE_PASSWORD=123456
    volumes:
        - ./data/oracle-data:/opt/oracle/oradata

  flink-consumer:
    build: ./flink-consumer
    container_name: flink-consumer
    environment:
      - SPRING_PROFILES_ACTIVE=production
    env_file:
      - ./flink-consumer/.env.production
    depends_on:
      - kafka
      - oracle-db
    restart: always
    ports:
      - "8081:8081"

  datawarehouse-management:
    build:
      context: ./datawarehouse
      dockerfile: Dockerfile
    container_name: data-warehouse-app
    env_file:
      - ./flink-consumer/.env.production
    depends_on:
      - oracle-db